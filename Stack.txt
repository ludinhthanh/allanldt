package stack;
class Stack {
    public final int MAX =50;
    int n;
    int a[] = new int[MAX];
    
    boolean isEmpty()
    {
        return(n < 0);
    }
    Stack()
    {
        n = -1;
    }
    boolean isfull() 
    {
   if(n == MAX)
      return true;
   else
      return false;
    }
    boolean push(int x)
    {
        if (n >= (MAX - 1)) {
            System.out.println("Stack Overflow");
            return false;
        }
        else {
            a[++n] = x;
            System.out.println(x + " pushed into stack");
            return true;
        }
    }
    int pop()
    {
        if (n < 0) {
            System.out.println("Stack Underflow");
            return 0;
        }
        else {
            int x = a[n--];
            return x;
        }
    }
    int peek()
    {
        if (n < 0) {
            System.out.println("Stack Underflow");
            return 0;
        }
        else {
            int x = a[n];
            return x;
        }
    }
    void Convert(int n){
        Stack s = new Stack();
        while(n != 0){
            s.push(n%2);
             n/=2 ;
        }
        while(!s.isEmpty()){
            System.out.print(s.peek());
            s.pop();
        }
    }
    boolean check(String str) {
    Stack s = new Stack();
    for(char c: str.toCharArray()){
        if( c != '('
         && c != ')'
         && c != '{'  
         && c != '}'
         && c != '['
         && c != ']'     
    ) continue;
        if (c=='(' || c=='{' || c=='[') s.push(c);
            if ((c==')' || c=='}' || c==']') && s.isEmpty()) return false;        
            if (c == ')'){
                if (s.peek() == '(') s.pop(); else return false;        
            }
            if (c == '}'){
                if (s.peek() == '{') s.pop(); else return false;        
            }
            if (c == ']'){
                if (s.peek() == '{') s.pop(); else return false;        
            }
    }
    char c;
    for(int i=0; i < str.length(); i++) {
        c = str.charAt(i);

        if(c == '{')
            return false;

        if(c == '(')
            s.push(c);

        if(c == '{') {
            s.push(c);
            if(c == '}')
                if(s.isEmpty())
                    return false;
                else if(s.peek() == '{')
                    s.pop();
        }
        else if(c == ')')
            if(s.isEmpty())
                return false;
            else if(s.peek() == '(')
                    s.pop();
                else
                    return false;
        }
        return s.isEmpty();
        }
}




class Main {
    public static void main(String args[])
    {
        Stack s = new Stack();
        s.push(1);
        s.push(2);
        s.push(3);
        System.out.print("Pop: " + s.pop());
        System.out.print("\nIs Stack S full? :" + s.isfull());
        System.out.print("\nIs Stack S empty? :" + s.isEmpty());
        System.out.print("Pop: " + s.pop());
        System.out.print("Pop: " + s.pop());
        System.out.print("\nIs Stack S full? :" + s.isfull());
        System.out.print("\nIs Stack S empty? :" + s.isEmpty());
        int n = 12;
        System.out.println("\n%d is converted to binary: " + n);
        s.Convert(n);

    }
}
